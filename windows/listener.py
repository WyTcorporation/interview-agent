import sounddevice as sd
import soundfile as sf
import time
import os
import requests

output_dir = "../input_audio"
os.makedirs(output_dir, exist_ok=True)
API_URL = "http://localhost:8000/ask/audio"  # –∞–±–æ —ñ–Ω—à–∏–π –ø–æ—Ä—Ç, —è–∫—â–æ –∑–º—ñ–Ω–∏–≤

# –¶—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–æ–∫/–µ–∫—Ä–∞–Ω—É

# –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ö–æ—Å—Ç-API (–¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É –Ω–∞ –Ω–∞–∑–≤—É)
hostapis = sd.query_hostapis()
devices = sd.query_devices()

# –ó–Ω–∞–π—Ç–∏ WASAPI + CABLE Output
for i, d in enumerate(devices):
    hostapi_index = d["hostapi"]
    hostapi_name = hostapis[hostapi_index]["name"]
    if "CABLE Output" in d["name"] and "WASAPI" in hostapi_name:
        sd.default.device = (i, None)
        print(f"üéß –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –ø—Ä–∏—Å—Ç—Ä—ñ–π: [{i}] {d['name']} ({hostapi_name})")
        break
else:
    print("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ CABLE Output —á–µ—Ä–µ–∑ WASAPI")
    exit(1)

def record_audio(duration=5, samplerate=48000):
    print("üéôÔ∏è  Recording...")
    audio = sd.rec(int(duration * samplerate), samplerate=samplerate, channels=1, dtype='int16')
    sd.wait()
    timestamp = int(time.time())
    filename = os.path.join(output_dir, f"recording_{timestamp}.wav")
    sf.write(filename, audio, samplerate)
    print(f"üíæ Saved: {filename}")
    return filename

def send_audio_to_api(filename):
    with open(filename, "rb") as f:
        files = {"file": (filename, f, "audio/wav")}
        response = requests.post(API_URL, files=files)
        if response.status_code == 200:
            print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.json()['answer']}")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ API: {response.status_code} {response.text}")

while True:
    fname = record_audio()
    send_audio_to_api(fname)
    time.sleep(1)
