import tkinter as tk
import requests
import base64
import io
import mss
from PIL import Image

API_URL = "http://localhost:8000/screen/analyze"

system_prompt = "–¢–∏ ‚Äî —Ç–µ—Ö–Ω—ñ—á–Ω–∏–π —Å–ø—ñ–≤–±–µ—Å—ñ–¥–Ω–∏–∫.–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ü—é —á–∞—Å—Ç–∏–Ω—É –µ–∫—Ä–∞–Ω–∞. –Ø–∫—â–æ –±–∞—á–∏—à –Ω–∞ –µ–∫—Ä–∞–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è (—Ç–µ—Å—Ç–æ–≤–µ –∞–±–æ –ø—Ä–æ–≥—Ä–∞–º–Ω–µ), –∫–æ—Ä–æ—Ç–∫–æ –¥–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ –ø–æ—è—Å–Ω–∏ —á–æ–º—É. –Ø–∫—â–æ —î –≤–∞—Ä—ñ–∞–Ω—Ç–∏ ‚Äî –≤–∏–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π."

# –¶–µ–π –∫–ª–∞—Å –¥–ª—è –∑–Ω—ñ–º–æ–∫ –∑ –µ–∫—Ä–∞–Ω–∞ –∑ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è–º –º—ñ–∂ –µ–∫—Ä–∞–Ω–∞–º–∏

class ScreenTool:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("üñ•Ô∏è Screen Assistant")
        self.root.geometry("400x80")
        self.root.attributes("-topmost", True)
        self.root.resizable(False, False)

        tk.Label(self.root, text="–ü–µ—Ä–µ–º—ñ—Å—Ç—ñ—Ç—å —Ü–µ –≤—ñ–∫–Ω–æ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä").pack(pady=5)
        tk.Button(self.root, text="üß† –°–ø–∏—Ç–∞—Ç–∏", command=self.capture_and_send).pack(pady=5)

        self.root.protocol("WM_DELETE_WINDOW", self.root.destroy)

    def capture_and_send(self):
        self.root.withdraw()
        self.root.after(300, self._do_capture)

    def _do_capture(self):
        with mss.mss() as sct:
            monitor = sct.monitors[1]  # [1] = –ø–µ—Ä—à–∏–π –ø–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω, [2] ‚Äî –¥—Ä—É–≥–∏–π —ñ —Ç.–¥.

            sct_img = sct.grab(monitor)
            img = Image.frombytes("RGB", sct_img.size, sct_img.rgb)
            img.save("screenshot.jpg")

            buffered = io.BytesIO()
            img.save(buffered, format="JPEG")
            img_b64 = base64.b64encode(buffered.getvalue()).decode()

        try:
            res = requests.post(API_URL, json={
                "image_b64": img_b64,
                "prompt":system_prompt
            })

            if res.ok:
                print("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å:", res.json()["answer"])
            else:
                print("‚ùå API Error:", res.status_code, res.text)
        except Exception as e:
            print("‚ö†Ô∏è –í–∏–Ω—è—Ç–æ–∫:", e)

        self.root.destroy()

    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    ScreenTool().run()
